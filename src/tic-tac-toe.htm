<!DOCTYPE html>
<html>
<head>
    <title>tic-tac-toe</title>
	<meta charset="utf-8" />
    <script src="_js/jquery.v2.2.1.js" type="text/javascript"></script>
    <script type="text/javascript">

    function Player(name, piece){
        this.name = name;
        this.piece = piece;
    }
    
    var GAMESTATUS = {
        "WAITING":0,
        "IN_PROGRESS":1,
        "FINISHED":2
    }

    var turn = 0;

    var players = new Array();
    players.push(new Player("You", "x"));
    players.push(new Player("Computer", "o"));

    var marks = new Array();
    marks.push(new Array('','',''));
    marks.push(new Array('','',''));
    marks.push(new Array('','',''));

    var currentStatus = GAMESTATUS.WAITING;
    var winner = 2;

    var bully = 0;

    function Restart(){
        // if (currentStatus != GAMESTATUS.FINISHED){
        //     if (!confirm("Are you sure? The game has not finished yet...")){
        //         return;
        //     }
        // }

        currentStatus = GAMESTATUS.IN_PROGRESS;

        for (var i = 0; i < 11; i++){
            for (var j = 0; j < 11; j++){

                if ((i < 3)&&(j < 3)){
                    marks[i][j] = '';
                }

                if ((i != 3)&&(i != 7)&&(j != 3)&&(j != 7)){
                    $('#g' + i + '-' + j).html('&nbsp;');
                }
            }
        }
        $('#message').html('');

        Startup();

        bully = bully == 0 ? 1 : 0;
    }



    function ComputerPlay(){

        if (bully == 1){
            for (var i = 0; i < 3; i++){
                if ((marks[i][0] == '')&&(marks[i][1] == '')&&(marks[i][2] == '')){
                    marks[i][0] = players[1].piece;
                    marks[i][1] = players[1].piece;
                    marks[i][2] = players[1].piece;
                    playAt(i,0,players[1].piece);
                    playAt(i,1,players[1].piece);
                    playAt(i,2,players[1].piece);
                    CheckFinish();
                    return;
                }

                if ((marks[i][0] == '')&&(marks[i][1] == '')&&(marks[i][2] == '')){
                    marks[0][i] = players[1].piece;
                    marks[1][i] = players[1].piece;
                    marks[2][i] = players[1].piece;
                    playAt(0,i,players[1].piece);
                    playAt(1,i,players[1].piece);
                    playAt(2,i,players[1].piece);
                    CheckFinish();
                    return;
                }
            }

        } else {
            var possibilities = new Array();
            for (var i = 0; i < 3; i++){
                for (var j = 0; j < 3; j++){
                    if (marks[i][j] == ''){
                        possibilities.push(new Array(i,j));
                    }
                }
            }

            var nextPlay = Math.floor(Math.random() * possibilities.length);

            marks[possibilities[nextPlay][0]][possibilities[nextPlay][1]] = players[1].piece;
            playAt(possibilities[nextPlay][0],possibilities[nextPlay][1],players[1].piece);
            CheckFinish();
        }
    }

    ////////////////////////////////////////////////////////////////
    //
    //  HAS A WINNER BEEN DETERMINED
    //
    function IsFinished(){
        var HasEmptyCells = false;

        // CHECK ALL ROWS AND COLUMNS
        for (var i = 0; i < 3; i++){
            if ((marks[i][0].length == 1)&&(marks[i][0] == marks[i][1])&&(marks[i][0] == marks[i][2]))
            {
                winner = players[0].piece == marks[i][0] ? 0 : 1;
                currentStatus = GAMESTATUS.FINISHED;
            }

            if ((marks[0][i].length == 1)&&(marks[0][i] == marks[1][i])&&(marks[0][i] == marks[2][i]))
            {
                winner = players[0].piece == marks[0][i] ? 0 : 1;
                currentStatus = GAMESTATUS.FINISHED;
            }

            for (var j = 0; j < 3; j++){
                if (marks[i][j].length == 0) HasEmptyCells = true;
            }
        }

        // DIAGONALS
        if ((marks[0][0].length == 1)&&(marks[0][0] == marks[1][1])&&(marks[0][0] == marks[2][2])){
            winner = players[0].piece == marks[1][1] ? 0 : 1;
            currentStatus = GAMESTATUS.FINISHED;
        }


        if ((marks[0][2].length == 1)&&(marks[0][2] == marks[1][1])&&(marks[0][2] == marks[2][0])){
            winner = players[0].piece == marks[1][1] ? 0 : 1;
            currentStatus = GAMESTATUS.FINISHED;
        }

        // SPACES TO PLAY
        if (!HasEmptyCells) currentStatus = GAMESTATUS.FINISHED;

        return currentStatus == GAMESTATUS.FINISHED ? true: false;
    }


    function Grid_Click(e){

        if (currentStatus == GAMESTATUS.FINISHED) return;

        var numRegex = /\d{1,2}/g;
        var row = Math.floor(numRegex.exec($(e.currentTarget).attr('id'))[0]/4);
        var col = Math.floor(numRegex.exec($(e.currentTarget).attr('id'))[0]/4);

        if (marks[row][col].length == 0){
            marks[row][col] = players[turn].piece;
            playAt(row,col, players[turn].piece);

            CheckFinish();
        }


    }


    function CheckFinish(){
        if (IsFinished()){
            if (winner == 0){
                $('#message').html('YOU WIN!!!');
            } else {
                $('#message').html('BAD LUCK.... COMPUTER WINS');
            }
        } else {
            turn = turn == 0 ? 1 : 0;
            if (turn == 1) ComputerPlay();
        }
    }

    ////////////////////////////////////////////////////////////////
    //
    //  DRAWS THE X OR O IN THE CELL ON THE GRID
    //
    function playAt(row,col,type){

        var startRow = row * 4;
        var startCol = col * 4;

        switch (type){
            case 'x':
                $('#g' + startRow + '-' + startCol).html('\\');
                $('#g' + (startRow + 2) + '-' + (startCol + 2)).html('\\');
                $('#g' + (startRow + 2) + '-' + startCol).html('/');
                $('#g' + (startRow + 1) + '-' + (startCol + 1)).html('/');
                $('#g' + startRow + '-' + (startCol + 2)).html('/');

                for (var i = startRow; i <= startRow + 2; i++){
                    for (var j = startCol; j <= startCol + 2; j++){
                        $('#g' + i + '-' + j).css("color","green");                        
                        $('#g' + i + '-' + j).css("background-color","white");                        
                    }
                }
                break;

            case 'o':
                $('#g' + startRow + '-' + (startCol + 1)).html('_');
                $('#g' + (startRow + 1) + '-' + startCol).html('(');
                $('#g' + (startRow + 1) + '-' + (startCol + 2)).html(')');
                $('#g' + (startRow + 2) + '-' + (startCol + 1)).html('&#175;');

                for (var i = startRow; i <= startRow + 2; i++){
                    for (var j = startCol; j <= startCol + 2; j++){
                        $('#g' + i + '-' + j).css("color","red");                        
                        $('#g' + i + '-' + j).css("background-color","white");                        
                    }
                }
                break;
        }
    }

    ////////////////////////////////////////////////////////////////
    //
    //  RETURNS THE CLASS FOR THE GRID SECTION THAT HAS BEEN CLICKED ON
    //
    function GetPos(idVal,event){
        var numRegex = /\d{1,2}/g;
        var row = Math.floor(numRegex.exec(idVal)[0]/4);
        var col = Math.floor(numRegex.exec(idVal)[0]/4);
        if ((marks[row][col].length == 0)||(event == 'out')){
            return '.pos' + row + '-' + col;
        }
    }



    ////////////////////////////////////////////////////////////////
    //
    //  SETUP THE BOARD
    //      - DRAW THE GRID
    //      - USE CLASSES TO LOGICALLY IDENTIFY CELLS AND GROUPINGS
    //      - CONNECT EVENTS
    //
    $(document).ready(function(){


        // SET UP THE BOARD
        for (var i = 0; i < 11; i++){
            $('#board').append('<div id="line' + i + '"></div>');
            for (var j = 0; j < 11; j++){

                // IDENTIFIES WHERE IN THE GRID THE CELL IS
                var posClass = '';

                if ((i != 3)&&(i != 7)&&(j != 3)&&(j != 7)){
                    posClass = "pos" + Math.floor(i/4).toString() + '-' + Math.floor(j/4).toString();
                }

                $("#line" + i).append('<span id="g' + i + '-' + j + '" class="line' + i + ' col' + j + ' ' + posClass + '"></span>');

                if ((i != 3)&&(i != 7)&&(j != 3)&&(j != 7)){
                    $('#g' + i + '-' + j).on('click',Grid_Click );
                }
            }
        }

        $('.pos0-0, .pos0-1, .pos0-2, ' + 
            '.pos1-0, .pos1-1, .pos1-2, ' + 
            '.pos2-0, .pos2-1, .pos2-2').on('mouseover',function(e){$(GetPos($(e.currentTarget).attr('id'),'over')).css('background-color','grey')});

        $('.pos0-0, .pos0-1, .pos0-2, ' + 
            '.pos1-0, .pos1-1, .pos1-2, ' + 
            '.pos2-0, .pos2-1, .pos2-2').on('mouseout',function(e){$(GetPos($(e.currentTarget).attr('id'),'out')).css('background-color','white')});


        // PLACE THE GRID ELEMENTS
        $('#board > div > span').html("&nbsp;");
        $('.col3, .col7').html("|");
        $('.line3, .line7').html("=");

        Startup();
    });
    // END SETUP
    /////////////////////////////////////////////////////////////

    function Startup(){
        var starter = Math.floor(Math.random() * 2);
        var piece = Math.floor(Math.random() * 2);

        if (piece == 0){
            players[0].piece = 'x';
            players[1].piece = 'o';
            $('#personTag').css('color','green');
            $('#computerTag').css('color','red');
        } else {
            players[0].piece = 'o';
            players[1].piece = 'x';
            $('#personTag').css('color','red');
            $('#computerTag').css('color','green');
        }

        $('#personTag').html(players[0].piece);
        $('#computerTag').html(players[1].piece);

        if (starter == 1){
            var row = Math.floor(Math.random() * 3);
            var col = Math.floor(Math.random() * 3);
            marks[row][col] = players[1].piece;
            playAt(row,col,players[1].piece);
        }

        turn = 0;
        winner = 2;
    }

    </script>
    <style>

        /* GENERAL STYLING */
        body{
            font-family:'Courier New';
            font-size: 1.0em;
        }

        #board{
            font-weight: bold;
            font-size:1.2em;
        }

        #info{
            float:left;
            width:400px;
        }

        #main{
            float:left;
            width:300px;
        }

        #info > div:first-child {
            font-weight: bold;
            font-size: 1.1em;
        }
        #info > div:nth-child(2) > div:first-child {
            font-weight: bold;
            font-size: 1.1em;
        }

        #personTag, #computerTag {
            font-weight: bold;
            font-size: 1.3em;
        }

        #info > div {

            padding-bottom:20px;
        }

    </style>
</head>
<body>
    <div id="info">
        <div>How about a game of tic-tac-toe?</div>
        <div>
            <div class="instructions">Instructions</div>
            <div>Click inside the grid to play...</div>
        </div>
        
        <div>
            <div>You: <span id="personTag"></span></div>
            <div>Computer: <span id="computerTag"></span></div>
            <div>Current status: <span id="status">Your turn</span></div>
            <div>Result: <span id="message">...</span></div>
        </div>
        <div><a href="javascript:Restart()">RESET</a></div>
    </div>

    <div id="main">
        <div id="board"></div>
    </div>

</body>
</html>
